import json
import csv
import os

def json_to_csv(json_file_path, csv_file_path):
    # Read the JSON data from file
    try:
        with open(json_file_path, 'r') as json_file:
            data = json.load(json_file)
    except FileNotFoundError:
        print(f"Error: File '{json_file_path}' not found.")
        return
    except json.JSONDecodeError:
        print(f"Error: File '{json_file_path}' contains invalid JSON.")
        return

    # Check if data exists and is in the expected format
    if not data or not isinstance(data, dict):
        print("Error: JSON data is empty or not in the expected format.")
        return

    # Define CSV headers
    headers = ['index', 'oid', 'type', 'id']

    # Write to CSV
    try:
        with open(csv_file_path, 'w', newline='') as csv_file:
            writer = csv.writer(csv_file)
            writer.writerow(headers)

            # Process each item in the JSON
            for key, item in data.items():
                try:
                    row = [
                        key,
                        item['_id']['$oid'],
                        item['type'],
                        item['id']
                    ]
                    writer.writerow(row)
                except KeyError as e:
                    print(f"Warning: Missing key {e} in item {key}. Skipping this entry.")

        print(f"CSV file created successfully at: {os.path.abspath(csv_file_path)}")
    except Exception as e:
        print(f"Error writing to CSV file: {e}")

# File paths
json_file_path = 'consumer.json'  # Input JSON file
csv_file_path = 'consumer.csv'    # Output CSV file

# Convert JSON to CSV
json_to_csv(json_file_path, csv_file_path)

# Optional: Display the CSV content
try:
    with open(csv_file_path, 'r') as f:
        print("\nCSV Content:")
        print(f.read())
except FileNotFoundError:
    print(f"Note: Could not display CSV content as file '{csv_file_path}' was not created.")
