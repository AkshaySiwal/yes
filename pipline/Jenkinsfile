// Jenkinsfile
def getReactiveParams() {
    return [
        choice(
            name: 'INPUT_TYPE',
            choices: ['', 'File', 'Manual'],
            description: 'Select input type'
        ),
        [$class: 'DynamicReferenceParameter',
            choiceType: 'ET_FORMATTED_HTML',
            name: 'ACCOUNT',
            description: ' ',
            referencedParameters: 'INPUT_TYPE',
            script: [
                $class: 'GroovyScript',
                fallbackScript: [classpath: [], sandbox: true, script: 
                    '''
                    return """
                        <style>
                            .parameter-name[name='ACCOUNT'] { display: none !important; }
                            .setting-name { display: none !important; }
                            .hidden-parameter { display: none !important; }
                        </style>
                    """
                    '''
                ],
                script: [
                    classpath: [], 
                    sandbox: true,
                    script: '''
                        def html = """
                            <style>
                                .parameter-name[name='ACCOUNT'] { display: none !important; }
                                .setting-name { display: none !important; }
                                .hidden-parameter { display: none !important; }
                            </style>
                        """
                        
                        if (INPUT_TYPE == 'Manual') {
                            html += """
                                <div class='form-group' style='margin-top: -10px;'>
                                    <label class='control-label' style='display: block; font-weight: bold; margin-bottom: 5px;'>
                                        ACCOUNT <span style='color: #FF0000;'>*</span>
                                    </label>
                                    <input type='text' 
                                           class='setting-input' 
                                           name='value' 
                                           placeholder='Enter Account ID'
                                           style='width: 300px; padding: 5px;'
                                           required>
                                    <div style='font-size: 12px; color: #666; margin-top: 5px;'>
                                        Enter the Account ID for manual configuration
                                    </div>
                                </div>
                            """
                        }
                        return html
                    '''
                ]
            ]
        ],
        [$class: 'DynamicReferenceParameter',
            choiceType: 'ET_FORMATTED_HTML',
            name: 'ROLE11',
            referencedParameters: 'INPUT_TYPE',
            script: [
                $class: 'GroovyScript',
                fallbackScript: [classpath: [], sandbox: true, script: 'return ""'],
                script: [
                    classpath: [], 
                    sandbox: true,
                    script: '''
                        if (INPUT_TYPE == 'Manual') {
                            return """
                                <div class='form-group'>
                                    <label class='control-label' style='display: block; font-weight: bold; margin-bottom: 5px;'>
                                        ROLE <span style='color: #FF0000;'>*</span>
                                    </label>
                                    <input type='text' 
                                           class='setting-input' 
                                           name='value' 
                                           placeholder='Enter Role Name'
                                           style='width: 300px; padding: 5px;'
                                           required>
                                    <div style='font-size: 12px; color: #666; margin-top: 5px;'>
                                        Enter the Role Name for manual configuration
                                    </div>
                                </div>
                            """
                        }
                        return ""
                    '''
                ]
            ]
        ],
        [$class: 'DynamicReferenceParameter',
            choiceType: 'ET_FORMATTED_HTML',
            name: 'INPUT_FILE',
            referencedParameters: 'INPUT_TYPE',
            script: [
                $class: 'GroovyScript',
                fallbackScript: [classpath: [], sandbox: true, script: 'return ""'],
                script: [
                    classpath: [], 
                    sandbox: true,
                    script: '''
                        if (INPUT_TYPE == 'File') {
                            return """
                                <div class='form-group'>
                                    <label class='control-label' style='display: block; font-weight: bold; margin-bottom: 5px;'>
                                        INPUT FILE <span style='color: #FF0000;'>*</span>
                                    </label>
                                    <input type='file' 
                                           class='setting-input' 
                                           name='value'
                                           style='width: 300px;'
                                           required>
                                    <div style='font-size: 12px; color: #666; margin-top: 5px;'>
                                        Select a file to upload
                                    </div>
                                </div>
                            """
                        }
                        return ""
                    '''
                ]
            ]
        ]
    ]
}

properties([
    parameters(getReactiveParams())
])

pipeline {
    agent any
    
    options {
        disableConcurrentBuilds()
    }
    
    stages {
        stage('Parameter Validation') {
            steps {
                script {
                    if (!params.INPUT_TYPE) {
                        currentBuild.result = 'SUCCESS'
                        return
                    }
                    
                    if (params.INPUT_TYPE == 'Manual') {
                        if (!params.ACCOUNT?.trim() || !params.ROLE?.trim()) {
                            error "Account and Role are required for Manual selection"
                        }
                        echo "Running in Manual mode with Account: ${params.ACCOUNT} and Role: ${params.ROLE}"
                    } else if (params.INPUT_TYPE == 'File') {
                        if (!params.INPUT_FILE) {
                            error "File is required for File selection"
                        }
                        echo "Running in File mode with uploaded file"
                    }
                }
            }
        }
        
        stage('Run Python Script') {
            when {
                expression { params.INPUT_TYPE != '' }
            }
            steps {
                script {
                    writeFile file: 'script.py', text: '''
import os

def main():
    input_type = os.environ.get('INPUT_TYPE')
    
    if input_type == 'Manual':
        account = os.environ.get('ACCOUNT')
        role = os.environ.get('ROLE')
        print(f"Running in Manual mode with Account: {account} and Role: {role}")
        
    elif input_type == 'File':
        file_path = os.environ.get('FILE_PATH')
        print(f"Running in File mode with file: {file_path}")
        with open(file_path, 'r') as file:
            content = file.read()
            print(f"File content: {content}")

if __name__ == "__main__":
    main()
'''
                    
                    withEnv([
                        "INPUT_TYPE=${params.INPUT_TYPE}",
                        "ACCOUNT=${params.ACCOUNT ?: ''}",
                        "ROLE=${params.ROLE ?: ''}",
                        "FILE_PATH=${params.INPUT_FILE ?: ''}"
                    ]) {
                        sh 'python3 script.py'
                    }
                }
            }
        }
    }
}
